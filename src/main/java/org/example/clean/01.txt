sz - initialSize
// Задание NativeCache
// задание размера хранилища при инициализации

slots - keys
// Задание NativeCache
// keys (ключи) - короткое название, которое дает любому (почти) программисту понимание семантики. Название переменной
// slots в задаче NativeCache отвечает больше на вопрос, свободна ли определенная ячейка и, если не свободна, то что-то
// хранит. С ответом на вопрос "что хранит переменная?" переменная с именем slots не справляется. Однако в методах,
// например:
// public boolean isKey(String key) {
//     int slot = seekSlot(key);
//     return slot != -1 && slots[slot] != null;
// }
// выглядит очень органично. Вместо такого названия можно было бы использовать entries, как более распространенное с
// лучшим отражением семантики, но entries это все же больше про связку ключ-значение.

hits - valuesUsageHits
// Задание NativeCache
// количество использований ключей

slot - entryIndex
// Задание NativeCache
// в приведенном выше методе при уходе от slots, нельзя оставить переменную slot в том же виде: семантика теряется. В
// первом приближении хочется взять в качестве названия переменной keyIndex, чтобы показать индекс в массиве keys.
// Однако более предпочтительным на мой взгляд может быть именно entryIndex, т.к. этот индекс отвечает за вхождение
// элемента, который представлен тремя значениями в keys[entryIndex], values[entryIndex], valuesUsageHits[entryIndex].
// Отметим, что переменная slot используется для обозначения ошибочной ситуации и индекса в массиве, что нежелательно.

slotToRemove - entryIndexToRemove
// Задание NativeCache
// в методе private void putWithExclusion(String key, T value) в соответствие с предыдущими изменениями переменную
// slotToRemove следует переименовать в entryIndexToRemove, т.е. индекс вхождения, который необходимо удалить.

slot - vacantEntryIndex
// Задание NativeCache
// в методе private void putWithExclusion(String key, T value) - вакантное место для нового элемента

count - storedElementsCount
// Задание LinkedList
// количество хранимых элементов

list - internalSampleRepresentation
// в задании на определение, является ли заданная строка палиндромом, я представляю исходную строку в виде
// последовательности символов

f_len - initialFilterLength
// Задание BloomFilter
// размер внутреннего хранилища фильтра, задаваемый при инициализации

str1 - key
// Задание BloomFilter
// ключ, который будет проверяться на наличие и иметь отображение во внутреннем представлении фильтра (методы isValue,
// hash1, hash2, hash)

random - hashAlgorithmModificationOffset
// Задание BloomFilter
// смещение, участвующее в модификации поведения алгоритма хэширования